# Autogenerated from websocket_interface.template file
from Wrapper import *

class HospitalsystemInterface:

  def __init__(self):
    self.wrapper = Wrapper()
    print("Welcome to the Hospital System!")

  def get_patient_info (self, data):
    #Here you call the actual operation in your backend code.
    return '{"msg":"Operation get_patient_info not yet implemented"}'


  def get_patient_appointments (self, data):
    if "doctor_id" in data :      
      #Here you call the actual operation in your backend code.
      return '{"msg":"Operation get_patient_appointments not yet implemented"}'
    else:
      return '{"msg":"Invalid request. The following parameters are required: doctor_id."}' 

  def delete_patient (self, data):
    if "patient_id" in data :      
      #Here you call the actual operation in your backend code.
      return '{"msg":"Operation delete_patient not yet implemented"}'
    else:
      return '{"msg":"Invalid request. The following parameters are required: patient_id."}' 

  def send_presription (self, data):
      return_msg = self.wrapper.send_presription(data)
      return return_msg

  def create_patient (self, data):
    if "patient_data" in data :      
      #Here you call the actual operation in your backend code.
      return '{"msg":"Operation create_patient not yet implemented"}'
    else:
      return '{"msg":"Invalid request. The following parameters are required: patient_data."}' 

  def get_patient_list (self, data):
    if "doctor_id" in data :      
      #Here you call the actual operation in your backend code.
      return '{"msg":"Operation get_patient_list not yet implemented"}'
    else:
      return '{"msg":"Invalid request. The following parameters are required: doctor_id."}' 
